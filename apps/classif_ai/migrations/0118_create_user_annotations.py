# Generated by Django 3.2 on 2021-09-06 13:10

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('classif_ai', '0117_create_postgis_extension'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_no_defect', models.BooleanField(default=False)),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_classifications', to='classif_ai.file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('file', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserDetection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_no_defect', models.BooleanField(default=False)),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_detections', to='classif_ai.file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('file', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserDetectionRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('region', django.contrib.gis.db.models.fields.GeometryField(srid=3857)),#https://epsg.io/3857, unit is in metre unlike 4326 where unit is in degrees; both still use coordinate systems to annotate on the map
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_userdetectionregion_created_related', to=settings.AUTH_USER_MODEL)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_detection_regions', to='classif_ai.userdetection')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_userdetectionregion_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('detection', 'region')},
            },
        ),
        migrations.CreateModel(
            name='UserDetectionRegionDefect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_userdetectionregiondefect_created_related', to=settings.AUTH_USER_MODEL)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_detection_region_defects', to='classif_ai.defect')),
                ('detection_region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_detection_region_annotations', to='classif_ai.userdetectionregion')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_userdetectionregiondefect_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('detection_region', 'defect')},
            },
        ),
        migrations.CreateModel(
            name='UserClassificationDefect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_classification_annotations', to='classif_ai.userclassification')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_userclassificationdefect_created_related', to=settings.AUTH_USER_MODEL)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_classification_defects', to='classif_ai.defect')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_userclassificationdefect_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('classification', 'defect')},
            },
        ),
    ]
