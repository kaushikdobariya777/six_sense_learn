# Generated by Django 3.2 on 2021-09-07 06:15

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('classif_ai', '0118_create_user_annotations'),
    ]

    operations = [
        migrations.CreateModel(
            name='GTClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('is_no_defect', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtclassification_created_related', to=settings.AUTH_USER_MODEL)),
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gt_classifications', to='classif_ai.file')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtclassification_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GTDetection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('is_no_defect', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtdetection_created_related', to=settings.AUTH_USER_MODEL)),
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gt_detections', to='classif_ai.file')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtdetection_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GTDetectionRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('region', django.contrib.gis.db.models.fields.GeometryField(srid=3857)),#https://epsg.io/3857, unit is in metre unlike 4326 where unit is in degrees; both still use coordinate systems to annotate on the map
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtdetectionregion_created_related', to=settings.AUTH_USER_MODEL)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gt_detection_regions', to='classif_ai.gtdetection')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtdetectionregion_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('detection', 'region')},
            },
        ),
        migrations.CreateModel(
            name='GTDetectionRegionDefect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtdetectionregiondefect_created_related', to=settings.AUTH_USER_MODEL)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gt_detection_region_defects', to='classif_ai.defect')),
                ('detection_region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gt_detection_region_annotation', to='classif_ai.gtdetectionregion')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtdetectionregiondefect_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('detection_region', 'defect')},
            },
        ),
        migrations.CreateModel(
            name='GTClassificationDefect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_ts', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gt_classification_annotations', to='classif_ai.gtclassification')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtclassificationdefect_created_related', to=settings.AUTH_USER_MODEL)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gt_classification_defects', to='classif_ai.defect')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classif_ai_gtclassificationdefect_updated_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('classification', 'defect')},
            },
        ),
    ]
